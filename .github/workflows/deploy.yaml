name: Deploy

on:
  workflow_dispatch:

  push:
    branches: ["main", "develop"]

env:
  APP_NAME: "comments-api"
  PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"
  REGION: "${{ secrets.GCP_REGION }}"
  REGISTRY: "${{ secrets.GCP_REGISTRY }}"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract branch name
        id: get_branch
        run: |-
          branch_name=${GITHUB_REF#refs/heads/}
          echo "##[set-output name=branch_name]${branch_name}"

      - name: Extract short commit
        id: get_short_commit
        run: |-
          short_commit=${GITHUB_SHA::7}
          echo "##[set-output name=short_commit]${short_commit}"

      - name: Set environment
        id: get_environment
        run: |-
          branch_name=$(echo ${{ steps.get_branch.outputs.branch_name }})
          if [ $branch_name == 'main' ]; then
            environment=prd
          else
            environment=dev
          fi
          echo "##[set-output name=environment]${environment}"

      - name: GCP authentication
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      - name: Docker build
        run: |-
          make build

      - name: Docker push
        run: |-
          make push

      - name: Update k8s files
        run: |-
          branch_name=$(echo ${{ steps.get_branch.outputs.branch_name }})
          short_commit=$(echo ${{ steps.get_short_commit.outputs.short_commit }})
          environment=$(echo ${{ steps.get_environment.outputs.environment }})
          app_name="${{ env.APP_NAME }}-$environment"

          git clone https://aristidesneto:${{ secrets.GH_ACCESS_TOKEN }}@github.com/aristidesneto/$app_name.git $app_name

          cd $app_name

          git config --local user.email "cicd@example.com"
          git config --local user.name "CICD"
          git config --local credential.helper 'store --file=.git/credentials'
          echo "https://github.com/aristidesneto:${{ secrets.GH_ACCESS_TOKEN }}" > .git/credentials

          sed -i "s/$branch_name:.*/$branch_name:$short_commit/g" $APP_NAME-deployment.yaml

          git diff

          git commit -am "Update image to commit $short_commit"
          git push

  # sonarqube:

  # vulnerability_scan:
